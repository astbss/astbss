# docker build -f Dockerfile.php7.2-asterisk-13.17.1 -t astbss/asterisk:13.17.1-php7.2 .
# docker run -it --name asterisk --rm astbss/asterisk:13.17.1-php7.2
# docker run -it --rm astbss/asterisk:13.17.1-php7.2


# vim:set ft=dockerfile:
# FROM debian:stretch-slim

FROM php:7.2-cli
LABEL maintainer="are@astbss.com"
ENV DEBIAN_FRONTEND noninteractive
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
   
RUN docker-php-ext-install mysqli pdo pdo_mysql


# 13.17.1

ENV ASTERISK_VERSION 13.17.1
ENV OPUS_CODEC       asterisk-13.0/x86-64/codec_opus-13.0_current-x86_64

COPY build-asterisk.sh /
RUN /build-asterisk.sh

RUN mkdir -p /etc/asterisk \
    ln -s /etc/asterisk/odbc.ini /etc/odbc.ini

# EXPOSE 5060/udp 5060/tcp
# VOLUME /var/lib/asterisk/sounds /var/lib/asterisk/keys /var/lib/asterisk/phoneprov /var/spool/asterisk /var/log/asterisk


# unixodbc unixodbc-dev odbcinst 
ADD debian-9/odbc.ini /etc/asterisk/odbc.ini
ADD debian-9/odbcinst.ini /etc/odbcinst.ini
ADD debian-9/libmaodbc.so /usr/lib/x86_64-linux-gnu/odbc/libmaodbc.so
# isql -v astbss # Test odbc

# /etc/resolv.conf will be overwritten by Docker - Used for testing
ADD debian-9/resolv.conf /etc/resolv2.conf

WORKDIR /home
# COPY debian-9/docker-entrypoint.sh /
# ENTRYPOINT ["/docker-entrypoint.sh"]
# CMD ["/usr/sbin/asterisk", "-vvvdddf", "-T", "-W", "-U", "asterisk", "-p"]
CMD ["/usr/sbin/asterisk", "-vvvdddfp"]
