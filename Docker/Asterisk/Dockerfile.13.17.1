# docker build -f Dockerfile.13.17.1 -t astbss/asterisk:13.17.1 .
# docker run -it --name asterisk --rm astbss/asterisk:13.17.1
# docker run -it --rm astbss/asterisk:13.17.1

# docker  run --net=pub_net --ip=10.90.90.11 -v /var/docdata/devhz21/etc_asterisk:/etc/asterisk -v /var/docdata/devhz21/lib_asterisk:/var/lib/asterisk -v /var/docdata/devhz21/spool_asterisk:/var/spool/asterisk -it astbss/asterisk:13.17.1


FROM astbss/asterisk:13.17.1-src
LABEL maintainer="are@astbss.com"
ENV DEBIAN_FRONTEND noninteractive
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

FROM php:7.2-cli
LABEL maintainer="are@astbss.com"
ENV DEBIAN_FRONTEND noninteractive
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
   
RUN docker-php-ext-install mysqli pdo pdo_mysql

WORKDIR /usr/src
COPY --from=0 /usr/src .

ENV ASTERISK_VERSION 13.17.1
WORKDIR /usr/src/asterisk-${ASTERISK_VERSION}

RUN apt-get update \
    && apt-get --no-install-recommends --no-install-suggests --yes --quiet install \
    wget nano  bash-completion sqlite3 libjansson4 \
    mysql-client default-libmysqlclient-dev \
    openssh-server unixodbc iptables sudo subversion \
    && apt-get clean && apt-get --yes --quiet autoremove --purge \
    && rm -rf  /var/lib/apt/lists/* /tmp/* /var/tmp/* \
            /usr/share/doc/* /usr/share/groff/* /usr/share/info/* /usr/share/linda/* \
            /usr/share/lintian/* /usr/share/locale/* /usr/share/man/*

# apt-get install mysql-client
# apt-get install default-libmysqlclient-dev
# mariadb-server mariadb-client libmariadbd-dev
# res_config_mysql.so

# Update max number of open files. 
# Set tty
RUN make install \
    && rm -r /usr/src/* \
    && rm -r /var/lib/asterisk/* \
    && rm -r /var/spool/asterisk/* \
    && sed -i -e 's/# MAXFILES=/MAXFILES=/' /usr/sbin/safe_asterisk \
    && sed -i 's/TTY=9/TTY=/g' /usr/sbin/safe_asterisk

WORKDIR /usr/src

RUN apt-get update \
    && apt-get --no-install-recommends --no-install-suggests --yes --quiet install \
    net-tools iproute2 iputils-ping iptables sudo fail2ban subversion \
    && rm -r /etc/fail2ban/* \
    && apt-get clean && apt-get --yes --quiet autoremove --purge \
    && rm -rf  /var/lib/apt/lists/* /tmp/* /var/tmp/* \
            /usr/share/doc/* /usr/share/groff/* /usr/share/info/* /usr/share/linda/* \
            /usr/share/lintian/* /usr/share/locale/* /usr/share/man/* 


RUN mkdir -p /etc/ibixtables \
    && mkdir -p /usr/lib/x86_64-linux-gnu/odbc \
    && groupadd -r -g 501 astpbx && useradd -r -u 501 -g astpbx -M -c "Used by astbss.com" -s /bin/false astpbx \
    && usermod --append -G astpbx astpbx \
    && groupadd -r -g 502 protected && useradd -r -u 502 -g protected -M -c "Used by astbss.com" -s /bin/false protected \
    && usermod --append -G protected protected \
    && mkdir -p /usr/local/astpbx/uptodate \
    && cd /usr/local/astpbx/uptodate/ && svn checkout http://svn.astbss.com/svn7/pbx/uptodate/acl --username=root --password pbx2009 --no-auth-cache \
    && cd /usr/local/astpbx/uptodate/acl && /bin/bash /usr/local/astpbx/uptodate/acl/astusers.sh


# unixodbc unixodbc-dev odbcinst 
ADD debian-9/odbc.ini /etc/odbc.ini
ADD debian-9/odbcinst.ini /etc/odbcinst.ini
ADD debian-9/libmaodbc.so /usr/lib/x86_64-linux-gnu/odbc/libmaodbc.so
# isql -v astbss # Test odbc

# /etc/resolv.conf will be overwritten by Doceer
# /etc/ibixtables/ibixtables-docker will cp /etc/resolv2.conf /etc/resolv.conf
ADD debian-9/resolv.conf /etc/resolv2.conf
ADD debian-9/asterisk-entrypoint.sh /usr/local/bin/
# RUN ln -s /usr/local/bin/asterisk-entrypoint.sh / # backwards compat

# ENTRYPOINT ["usr/local/bin/asterisk-entrypoint.sh"]
CMD ["asterisk"]
# when the container starts up, the command portion is interprated to be sh -c 'asterisk-entrypoint.sh asterisk'.
# ENTRYPOINT = script to run, CMD = Command line parameter

# CMD asterisk -fvvv
# CMD /usr/sbin/safe_asterisk
# CMD /bin/bash

# CMD asterisk -fvvv

# ENV PATH=bin:vendor/bin:$PATH
# ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# ENTRYPOINT ["/usr/sbin/safe_asterisk"]

