# vim:set ft=dockerfile:
# docker build -f Dockerfile.7.4-laravel -t astbss/php:7.4-laravel .
# docker push astbss/php:7.4-laravel


# digest: sha256:452f91df03ff8f099a74d4ae53e2d4ec23559e2292e2487b383158b3414b06b7

# docker run -it --rm astbss/php:7.4-laravel bash
# docker container prune --force

# https://www.digitalocean.com/community/tutorials/how-to-install-and-set-up-laravel-with-docker-compose-on-ubuntu-20-04
# https://stackoverflow.com/questions/43442531/php-fpm-does-not-listen-on-ports
# https://www.digitalocean.com/community/tutorials/how-to-set-up-laravel-nginx-and-mysql-with-docker-compose

# listen = 9000

# https://hub.docker.com/_/php/

# https://docs.docker.com/develop/develop-images/multistage-build/


FROM php:7.4-fpm
LABEL maintainer="are@astbss.com"
ENV DEBIAN_FRONTEND noninteractive
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

# Set working directory
WORKDIR /code

# RUN docker-php-ext-install mysqli pdo pdo_mysql gd

# It is strongly recommended to use the production config for images used in production environments!
# Choose your configuration in: /usr/local/etc/php
# RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
# RUN mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"

# libpng-dev is needed to compile php gd

RUN apt-get update \
    && apt-get --no-install-recommends --no-install-suggests --yes --quiet install \
    wget curl nano libpng-dev libonig-dev libxml2-dev git zip unzip rsync \
    && cp "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini" \
    && ln /usr/local/bin/php /usr/bin/php \
    && apt-get clean && apt-get --yes --quiet autoremove --purge \
    && rm -rf  /var/lib/apt/lists/* /tmp/* /var/tmp/* \
            /usr/share/doc/* /usr/share/groff/* /usr/share/info/* /usr/share/linda/* \
            /usr/share/lintian/* /usr/share/locale/* /usr/share/man/*

# Some of the modules are already compiled into PHP; please check
# the output of "php -i" to see which modules are already loaded.
RUN docker-php-ext-install mysqli pdo pdo_mysql mbstring exif pcntl bcmath gd

RUN pecl install uopz \
    && echo "extension=uopz.so" >> $PHP_INI_DIR/php.ini \
    && pecl install xdebug \
    && echo "zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20190902/xdebug.so" >> $PHP_INI_DIR/php.ini \
    && wget https://phar.phpunit.de/phpunit-6.5.phar \
    && chmod +x phpunit-6.5.phar \
    && mv phpunit-6.5.phar /usr/local/bin/phpunit

# RUN docker-php-ext-install ext-uopz ext-soap ext-xdebug

# https://github.com/krakjoe/uopz/blob/master/INSTALL.md
# phpunit/php-invoker

# We install Composer by copying the composer executable from its
# latest official image to our own application image.
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u 1000 -d /home/laravel laravel
RUN mkdir -p /home/laravel/.composer && \
    chown -R laravel:laravel /home/laravel

# https://github.com/docker-library/php/blob/master/7.4/buster/fpm/Dockerfile
# ENTRYPOINT ["docker-php-entrypoint"]
# WORKDIR /var/www/html


# Expose port 9000 and start php-fpm server
EXPOSE 9000
CMD ["php-fpm"]
